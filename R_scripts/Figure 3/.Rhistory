ifelse(data_fragment >=90 & data_fragment <=150, "2",
ifelse(data_fragment >=151 & data_fragment <=220, "3", "4"))))
row.names(data_size) <- colnames(data_change)
data_size <- factor(data_size,
levels = c("1", "2", "3", "4"),
labels = c("10-89bp", "90-150bp", "151-220bp", "221-320bp"))
rm(data_fragment)
## Set colours
col_fun <- colorRamp2(c(-6, -3, 0, 3, 6),
c("#1f78b4", "white", "white", "white", "#e31a1c"))
col_relapse <- c(Yes = "#fb9a99", No = "#a6cee3", "Lost to Follow-up" = "lightgrey")
col_stage <- c(IIB = "#FFFFB3", IIIA = "#FDB462", IIIB = "#FB8072")
col_treatment <- c(Brachytherapy = "#6A3D9A", Enucleation = "#CAB2D6")
## Set clinical annotations
data_relapse <- as.matrix(data_samples$relapse)
row.names(data_relapse) <- data_samples$TGL_ID
data_relapse <- factor(data_relapse, levels = c("yes", "no", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
data_stage <- as.matrix(data_samples$Stage)
row.names(data_stage) <- data_samples$TGL_ID
data_treatment <- as.matrix(data_samples$Treatment)
row.names(data_treatment) <- data_samples$TGL_ID
## Set ichor data
data_ichor <- as.matrix(data_samples$ichorCNA*100)
row.names(data_ichor) <- data_samples$TGL_ID
## Set plot annotations
left_annotation <- rowAnnotation("Stage" = data_stage,
"Treatment" = data_treatment,
"Relapse" = data_relapse,
show_annotation_name = FALSE,
border = TRUE,
col = list("Relapse" = col_relapse,
"Stage" = col_stage,
"Treatment" = col_treatment),
annotation_legend_param = list(border = TRUE))
right_annotation <- rowAnnotation("ichorCNA TF" = anno_barplot(data_ichor,
axis_param = list(side = "top",
labels_rot = 0,
gp = gpar(fontsize = 10)),
width = unit(3, "cm")),
"Z-Score" = anno_points(data_zscores,
ylim = c(0, 2),
axis_param = list(side = "top",
labels_rot = 0,
gp = gpar(fontsize = 10)),
width = unit(3, "cm")),
Timepoint = anno_text(data_labels,
gp = gpar(fontsize = 10)),
annotation_name_side = "top",
annotation_name_rot = 45,
width = unit(8, "cm"))
freq_annotation <- HeatmapAnnotation(Distribution = anno_lines(data_mean,
gp = gpar(fontsize = 10)),
border = TRUE,
annotation_name_side = "left",
annotation_name_gp = gpar(fontsize = 14),
height = unit(3, "cm"),
annotation_name_rot = 0)
## Set legend labels
heatmap_legend_param = list(title = "SD from Healthy",
border = TRUE,
at = c(-6, -3, 0, 3, 6))
## Set orders
col_order <- colnames(data_change)
row_order <- data_samples$TGL_ID
row_split <- data_samples$sample_ID
split_order <- unique(row_split)
row_split <- factor(row_split, levels = split_order)
col_split <- data_size
Heatmap <- Heatmap(data_change,
col = col_fun,
row_order = row_order,
column_order = col_order,
left_annotation = left_annotation,
right_annotation = right_annotation,
top_annotation = freq_annotation,
heatmap_legend_param = heatmap_legend_param,
row_split = row_split,
column_split = col_split,
row_title_rot = 0,
show_row_names = FALSE,
show_column_names = FALSE,
border = TRUE)
draw(Heatmap)
max(data_change)
min(data_change)
View(data_change)
hist(data_change
)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 2")
## Import data
data_frequency <- read.delim("fragment_frequency.txt")
data_samples <- read.delim("sample_list.txt")
data_samples <- data_samples[data_samples$TGL_ID %in% colnames(data_frequency), ]
## Seperate normals
normal_samples <- data_samples[data_samples$sample_ID == "Healthy", ]
## Order samples
data_samples$sample_ID <- as.factor(data_samples$sample_ID)
data_samples <- data_samples[!(data_samples$sample_ID == "Healthy"), ]
data_samples$timepoint <- as.character(data_samples$timepoint)
data_samples$timepoint <- factor(data_samples$timepoint,
levels = c("0", "0.5", "3", "6", "12"),
labels = c("Baseline", "2 weeks", "3 months", "6 months", "12 months"))
data_samples <- data_samples[order(factor(data_samples$Relapse, levels = c("Yes", "No", "LOF")),
factor(data_samples$Stage, levels = c("IIB", "IIIA", "IIIB")),
factor(data_samples$Treatment, levels = c("Brachytherapy", "Enucleation")),
data_samples$sample_ID,
factor(data_samples$timepoint, levels = c("tumour", 0, 0.5, 3, 6, 12))), ]
data_labels <- as.matrix(data_samples$timepoint)
row.names(data_labels) <- data_samples$TGL_ID
## Transform fragment size to % frequencies
data_frequency <- data_frequency[data_frequency$fragment >= 10 & data_frequency$fragment <= 320, ]
row.names(data_frequency) <- data_frequency$fragment
data_frequency <- as.data.frame(t(data_frequency))
data_frequency <- data_frequency[-c(1),]
data_frequency <- (data_frequency/rowSums(data_frequency))*100
data_frequency <- as.data.frame(t(data_frequency))
## Make normal median
data_normal <- data_frequency[ , (colnames(data_frequency) %in% normal_samples$TGL_ID)]
data_normal <- subset(data_normal, select = -c(lib090, lib150, lib164))
data_frequency <- data_frequency[ , !(colnames(data_frequency) %in% normal_samples$TGL_ID)]
data_frequency <- data_frequency[ , data_samples$TGL_ID]
data_mean <- rowMeans(data_normal)
data_sd <- transform(data_normal, SD=apply(data_normal, 1, sd, na.rm = TRUE))
data_median <- as.data.frame(cbind(data_mean, data_sd$SD))
colnames(data_median) <- c("mean", "sd")
rm(data_sd, data_mean)
data_mean <- as.matrix(data_median$mean)
row.names(data_mean) <- row.names(data_median)
## Normalize to fold change over median
data_change <- (data_frequency-data_median$mean)/data_median$sd
data_change <- data_change[ , data_samples$TGL_ID]
data_change <- as.matrix(t(data_change))
data_change[is.nan(data_change)] <- 0
data_change[is.infinite(data_change)] <- 0
## Calculate summed Z-scores
data_normal <- (data_normal-data_median$mean)/data_median$sd
healthy_sums <- colSums(abs(data_normal))
View(data_change)
healthy_sums <- colSums(abs(data_normal), na.rm = TRUE)
healthy_median <- median(healthy_sums, na.rm = TRUE)
healthy_sd <- sd(healthy_sums)
data_sums <- rowSums(abs(data_change))
data_zscores <- abs(data_sums-healthy_median)/healthy_sd
View(data_change)
source('~/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 2/Figure 2 - Fragment frequency.R')
source('~/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 1/Figure 1.R')
source('~/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 1/Figure 1.R')
View(data_relapse)
data_relapse <- factor(data_relapse, levels = c("yes", "no", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
data_relapse <- as.matrix(data_onco$Relapse)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 1")
data_onco <- read.table("Figure 1_onco.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_ichor <- read.table("Figure 1_ichor.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_depths <- read.table("Figure 1_depth.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Normalize depths
rownames(data_depths) <- paste0("chr", data_depths$chr, "_", data_depths$start)
data_depths <- data_depths[data_depths$chr %in% c("3", "6", "8"), ]
data_depths <- as.matrix(select(data_depths, -c("chr", "start", "end")))
data_depths <- data_depths[complete.cases(data_depths), ]
data_depths <- data_depths/colMeans(data_depths)
data_depths_median <- colMedians(data_depths)
data_depths_MAD <- colMads(data_depths)
data_depths <- (data_depths - data_depths_median)/data_depths_MAD
## Create healthy depths
healthy_depths <- data_depths[ , !(colnames(data_depths) %in% data_ichor$TGL_ID)]
healthy_median <- colMedians(healthy_depths)
healthy_mad <- colMads(healthy_depths)
healthy_depths <- ifelse(abs(healthy_depths) > (healthy_median + (3.5*healthy_mad)), NA, healthy_depths)
healthy_depths[!!rowSums(is.na(healthy_depths)),] <- NA
healthy_blacklist <- healthy_depths[rowSums(is.na(healthy_depths)) > 0,]
healthy_depths <- healthy_depths[complete.cases(healthy_depths), ]
healthy_depths <- (healthy_depths - colMeans(healthy_depths))/colSds(healthy_depths, na.rm = TRUE)
healthy_median <- rowMedians(healthy_depths)
healthy_sd <- rowSds(healthy_depths)
## Convert to Z-scores
healthy_depths <- (healthy_depths - healthy_median)/healthy_sd
healthy_sums <- colSums(abs(healthy_depths))
healthy_mean <- median(healthy_sums)
healthy_dist <- sd(healthy_sums)
healthy_z <- (healthy_sums - healthy_mean)/healthy_dist
data_depths <- data_depths[row.names(data_depths) %in% row.names(healthy_depths), ]
data_depths <- data_depths[ , colnames(data_depths) %in% data_ichor$TGL_ID]
data_depths <- (data_depths - colMedians(data_depths, na.rm = TRUE))/colSds(data_depths, na.rm = TRUE)
data_depths <- (data_depths - healthy_median)/healthy_sd
sample_sums <- colSums(abs(data_depths))
sample_z <- abs(sample_sums - healthy_mean)/healthy_dist
data_ichor <- merge(data_ichor, sample_z, by.x = "TGL_ID", by.y = "row.names")
## Set Z-scores
data_z <- data_onco[ , 1:3]
data_z <- merge(data_z, data_ichor, b.x = c("sample_ID", "timepoint"), by.y = c("sample_ID", "timepoint"), all = TRUE)
row.names(data_z) <- data_z$file_ID
data_z <- as.matrix(data_z)
data_z <- data_z[,"y", drop = FALSE]
class(data_z) <- "numeric"
## Order samples
data_onco <- data_onco[order(factor(data_onco$Relapse, levels = c("Yes", "No", "LOF")),
factor(data_onco$Stage, levels = c("IIB", "IIIA", "IIIB")),
factor(data_onco$Treatment, levels = c("Brachytherapy", "Enucleation")),
data_onco$sample_ID,
factor(data_onco$timepoint, levels = c("tumour", 0, 0.5, 3, 6, 12))), ]
row.names(data_onco) <- data_onco$file_ID
## Set ichorCNA
data_onco$ichorCNA <- data_onco$ichorCNA*100
data_ichor <- as.matrix(data_onco$ichorCNA)
row.names(data_ichor) <- row.names(data_onco)
data_z <- data_z[row.names(data_ichor),]
## Set clinical information
data_stage <- as.matrix(data_onco$Stage)
row.names(data_stage) <- row.names(data_onco)
data_treatment <- as.matrix(data_onco$Treatment)
row.names(data_treatment) <- row.names(data_onco)
data_relapse <- as.matrix(data_onco$Relapse)
View(data_relapse)
data_onco$Relapse <- factor(data_onco$Relapse, levels = c("Yes", "No", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
data_relapse <- factor(data_relapse, levels = c("Yes", "No", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
row.names(data_relapse) <- row.names(data_onco)
data_relapse <- as.matrix(data_onco$Relapse)
data_relapse <- factor(data_relapse, levels = c("Yes", "No", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
data_onco <- read.table("Figure 1_onco.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_ichor <- read.table("Figure 1_ichor.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_depths <- read.table("Figure 1_depth.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Normalize depths
rownames(data_depths) <- paste0("chr", data_depths$chr, "_", data_depths$start)
data_depths <- data_depths[data_depths$chr %in% c("3", "6", "8"), ]
data_depths <- as.matrix(select(data_depths, -c("chr", "start", "end")))
data_depths <- data_depths[complete.cases(data_depths), ]
data_depths <- data_depths/colMeans(data_depths)
data_depths_median <- colMedians(data_depths)
data_depths_MAD <- colMads(data_depths)
data_depths <- (data_depths - data_depths_median)/data_depths_MAD
## Create healthy depths
healthy_depths <- data_depths[ , !(colnames(data_depths) %in% data_ichor$TGL_ID)]
healthy_median <- colMedians(healthy_depths)
healthy_mad <- colMads(healthy_depths)
healthy_depths <- ifelse(abs(healthy_depths) > (healthy_median + (3.5*healthy_mad)), NA, healthy_depths)
healthy_depths[!!rowSums(is.na(healthy_depths)),] <- NA
healthy_blacklist <- healthy_depths[rowSums(is.na(healthy_depths)) > 0,]
healthy_depths <- healthy_depths[complete.cases(healthy_depths), ]
healthy_depths <- (healthy_depths - colMeans(healthy_depths))/colSds(healthy_depths, na.rm = TRUE)
healthy_median <- rowMedians(healthy_depths)
healthy_sd <- rowSds(healthy_depths)
## Convert to Z-scores
healthy_depths <- (healthy_depths - healthy_median)/healthy_sd
healthy_sums <- colSums(abs(healthy_depths))
healthy_mean <- median(healthy_sums)
healthy_dist <- sd(healthy_sums)
healthy_z <- (healthy_sums - healthy_mean)/healthy_dist
data_depths <- data_depths[row.names(data_depths) %in% row.names(healthy_depths), ]
data_depths <- data_depths[ , colnames(data_depths) %in% data_ichor$TGL_ID]
data_depths <- (data_depths - colMedians(data_depths, na.rm = TRUE))/colSds(data_depths, na.rm = TRUE)
data_depths <- (data_depths - healthy_median)/healthy_sd
sample_sums <- colSums(abs(data_depths))
sample_z <- abs(sample_sums - healthy_mean)/healthy_dist
data_ichor <- merge(data_ichor, sample_z, by.x = "TGL_ID", by.y = "row.names")
## Set Z-scores
data_z <- data_onco[ , 1:3]
data_z <- merge(data_z, data_ichor, b.x = c("sample_ID", "timepoint"), by.y = c("sample_ID", "timepoint"), all = TRUE)
row.names(data_z) <- data_z$file_ID
data_z <- as.matrix(data_z)
data_z <- data_z[,"y", drop = FALSE]
class(data_z) <- "numeric"
## Order samples
data_onco <- data_onco[order(factor(data_onco$Relapse, levels = c("Yes", "No", "LOF")),
factor(data_onco$Stage, levels = c("IIB", "IIIA", "IIIB")),
factor(data_onco$Treatment, levels = c("Brachytherapy", "Enucleation")),
data_onco$sample_ID,
factor(data_onco$timepoint, levels = c("tumour", 0, 0.5, 3, 6, 12))), ]
row.names(data_onco) <- data_onco$file_ID
## Set ichorCNA
data_onco$ichorCNA <- data_onco$ichorCNA*100
data_ichor <- as.matrix(data_onco$ichorCNA)
row.names(data_ichor) <- row.names(data_onco)
data_z <- data_z[row.names(data_ichor),]
## Set clinical information
data_stage <- as.matrix(data_onco$Stage)
row.names(data_stage) <- row.names(data_onco)
data_treatment <- as.matrix(data_onco$Treatment)
row.names(data_treatment) <- row.names(data_onco)
data_relapse <- as.matrix(data_onco$Relapse)
data_relapse <- factor(data_relapse, levels = c("Yes", "No", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
row.names(data_relapse) <- row.names(data_onco)
View(data_onco)
data_relapse <- as.matrix(data_onco$Relapse)
row.names(data_relapse) <- row.names(data_onco)
data_relapse <- factor(data_relapse, levels = c("Yes", "No", "LOF"),
labels = c("Yes", "No", "Lost to Follow-up"))
source('~/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 1/Figure 1.R')
library(ComplexHeatmap)
library(dplyr)
library(circlize)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3")
data_ratio <- read.table("ratio_distance.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_samples <- read.table("sample_list.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set chromosomes
data_chr <- data_ratio[, c("seqnames", "arm", "start", "end")]
row.names(data_chr) <- with(data_chr, paste0(seqnames, "_", start))
## Transform values
row.names(data_ratio) <- with(data_ratio, paste0(seqnames, "_", start))
data_ratio <- data_ratio[, -c(1:4)]
## Seperate normals
sample_normals <- data_samples[data_samples$sample_ID == "Healthy", ]
data_normals <- data_ratio[, colnames(data_ratio) %in% sample_normals$TGL_ID]
data_ratio <- data_ratio[ , !(colnames(data_ratio) %in% sample_normals$TGL_ID)]
rm(sample_normals)
## Set alteration frequencies
data_freq <- rowSums(data_ratio, na.rm = TRUE)
data_freq <- data_freq/ncol(data_ratio)
data_freq <- as.matrix(data_freq)
## Set labels
data_samples$timepoint <- factor(data_samples$timepoint,
levels = c("0", "0.5", "3", "6", "12", "-"),
labels = c("Baseline", "2 weeks", "3 months", "6 months", "12 months", " "))
data_labels <- as.matrix(data_samples$timepoint)
row.names(data_labels) <- data_samples$TGL_ID
## Set chr order
armlevels <- c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","10p","10q","11p","11q","12p",
"12q","13q","14q","15q","16p","16q","17p","17q","18p","18q",
"19p", "19q","20p","20q","21q","22q")
data_chr$arm <- factor(data_chr$arm, levels=armlevels)
data_chr$arm <- factor(data_chr$arm, levels=armlevels,
labels = c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","","10q"," ","11q","  ",
"12q","13q","14q","15q","   ","16q", "    ","17q","     ","18q",
"      ", "       ", "        ", "         ","          ","           "))
## Set sample order
rownames(data_samples) <- data_samples$TGL_ID
data_samples <- data_samples[, c("sample_ID", "timepoint", "relapse")]
## Sum Frequency of >3SD
data_ratio <- cbind(data_ratio, data_normals)
data_ratio <- data_ratio[ , rownames(data_samples)]
data_sum <- (colSums(data_ratio)/512)*100
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3")
data_ratio <- read.table("ratio_distance.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_samples <- read.table("sample_list.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set chromosomes
data_chr <- data_ratio[, c("seqnames", "arm", "start", "end")]
row.names(data_chr) <- with(data_chr, paste0(seqnames, "_", start))
## Transform values
row.names(data_ratio) <- with(data_ratio, paste0(seqnames, "_", start))
data_ratio <- data_ratio[, -c(1:4)]
## Set chr order
armlevels <- c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","10p","10q","11p","11q","12p",
"12q","13q","14q","15q","16p","16q","17p","17q","18p","18q",
"19p", "19q","20p","20q","21q","22q")
data_chr$arm <- factor(data_chr$arm, levels=armlevels)
data_chr$arm <- factor(data_chr$arm, levels=armlevels,
labels = c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","","10q"," ","11q","  ",
"12q","13q","14q","15q","   ","16q", "    ","17q","     ","18q",
"      ", "       ", "        ", "         ","          ","           "))
## Set order
chr_order <- colnames(data_ratio)
column_split <- data_chr$arm
## Generate oncopring
#pdf("Figure 3 - Fragment ratio_heatmap.pdf", height = 9, width = 15)
oncoPrint <- oncoPrint(data_ratio,
#col = col,
#show_row_names = FALSE,
#heatmap_legend_param = heatmap_legend_param,
#top_annotation = NULL,
#bottom_annotation = freq_annotation,
#left_annotation = left_annotation,
#right_annotation = right_annotation,
column_order = chr_order,
#row_labels = NULL,
column_split = column_split,
row_title_rot = 0,
border = TRUE,
border_gp = gpar(col = "black"))
View(data_ratio)
data_ratio <- as.matrix(data_ratio)
View(data_ratio)
## Generate oncopring
#pdf("Figure 3 - Fragment ratio_heatmap.pdf", height = 9, width = 15)
oncoPrint <- oncoPrint(data_ratio,
#col = col,
#show_row_names = FALSE,
#heatmap_legend_param = heatmap_legend_param,
#top_annotation = NULL,
#bottom_annotation = freq_annotation,
#left_annotation = left_annotation,
#right_annotation = right_annotation,
column_order = chr_order,
#row_labels = NULL,
column_split = column_split,
row_title_rot = 0,
border = TRUE,
border_gp = gpar(col = "black"))
## Generate oncopring
#pdf("Figure 3 - Fragment ratio_heatmap.pdf", height = 9, width = 15)
Heatmap <- Heatmap(data_ratio,
#col = col,
#show_row_names = FALSE,
#heatmap_legend_param = heatmap_legend_param,
#top_annotation = NULL,
#bottom_annotation = freq_annotation,
#left_annotation = left_annotation,
#right_annotation = right_annotation,
column_order = chr_order,
#row_labels = NULL,
column_split = column_split,
row_title_rot = 0,
border = TRUE,
border_gp = gpar(col = "black"))
source('~/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3/Figure 3 - Fragment ratio_oncoprint.R')
chr_order
column_split
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3")
data_ratio <- read.table("ratio_distance.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_samples <- read.table("sample_list.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set chromosomes
data_chr <- data_ratio[, c("seqnames", "arm", "start", "end")]
row.names(data_chr) <- with(data_chr, paste0(seqnames, "_", start))
## Transform values
row.names(data_ratio) <- with(data_ratio, paste0(seqnames, "_", start))
data_ratio <- data_ratio[, -c(1:4)]
data_ratio <- as.matrix(data_ratio)
## Set chr order
armlevels <- c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","10p","10q","11p","11q","12p",
"12q","13q","14q","15q","16p","16q","17p","17q","18p","18q",
"19p", "19q","20p","20q","21q","22q")
data_chr$arm <- factor(data_chr$arm, levels=armlevels)
data_chr$arm <- factor(data_chr$arm, levels=armlevels,
labels = c("1p","1q","2p","2q","3p","3q","4p","4q","5p","5q","6p","6q",
"7p","7q","8p","8q", "9p", "9q","","10q"," ","11q","  ",
"12q","13q","14q","15q","   ","16q", "    ","17q","     ","18q",
"      ", "       ", "        ", "         ","          ","           "))
## Set order
chr_order <- colnames(data_ratio)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3")
data_ratio <- read.table("ratio_distance.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_samples <- read.table("sample_list.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set chromosomes
data_chr <- data_ratio[, c("seqnames", "arm", "start", "end")]
row.names(data_chr) <- with(data_chr, paste0(seqnames, "_", start))
## Transform values
row.names(data_ratio) <- with(data_ratio, paste0(seqnames, "_", start))
data_ratio <- data_ratio[, -c(1:4)]
data_ratio <- as.matrix(data_ratio)
## Seperate normals
sample_normals <- data_samples[data_samples$sample_ID == "Healthy", ]
data_normals <- data_ratio[, colnames(data_ratio) %in% sample_normals$TGL_ID]
data_ratio <- data_ratio[ , !(colnames(data_ratio) %in% sample_normals$TGL_ID)]
rm(sample_normals)
## Set alteration frequencies
data_freq <- rowSums(data_ratio, na.rm = TRUE)
data_freq <- data_freq/ncol(data_ratio)
data_freq <- as.matrix(t(data_freq))
## Set order
chr_order <- colnames(data_ratio)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Figure 3")
data_ratio <- read.table("ratio_distance.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
data_samples <- read.table("sample_list.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set chromosomes
data_chr <- data_ratio[, c("seqnames", "arm", "start", "end")]
row.names(data_chr) <- with(data_chr, paste0(seqnames, "_", start))
## Transform values
row.names(data_ratio) <- with(data_ratio, paste0(seqnames, "_", start))
data_ratio <- data_ratio[, -c(1:4)]
data_ratio <- as.matrix(t(data_ratio))
## Set order
chr_order <- colnames(data_ratio)
column_split <- data_chr$arm
## Generate oncopring
#pdf("Figure 3 - Fragment ratio_heatmap.pdf", height = 9, width = 15)
Heatmap <- Heatmap(data_ratio,
#col = col,
#show_row_names = FALSE,
#heatmap_legend_param = heatmap_legend_param,
#top_annotation = NULL,
#bottom_annotation = freq_annotation,
#left_annotation = left_annotation,
#right_annotation = right_annotation,
column_order = chr_order,
#row_labels = NULL,
column_split = column_split,
row_title_rot = 0,
border = TRUE,
border_gp = gpar(col = "black"))
draw(oncoPrint, heatmap_legend_side = "right", merge_legend = TRUE)
draw(Heatmap, heatmap_legend_side = "right", merge_legend = TRUE)
## Generate oncopring
#pdf("Figure 3 - Fragment ratio_heatmap.pdf", height = 9, width = 15)
Heatmap <- Heatmap(data_ratio,
#col = col,
#show_row_names = FALSE,
#heatmap_legend_param = heatmap_legend_param,
#top_annotation = NULL,
#bottom_annotation = freq_annotation,
#left_annotation = left_annotation,
#right_annotation = right_annotation,
column_order = chr_order,
#row_labels = NULL,
column_split = column_split,
row_title_rot = 0,
border = TRUE,
border_gp = gpar(col = "black"))
draw(Heatmap, heatmap_legend_side = "right", merge_legend = TRUE)
View(Heatmap)
View(Heatmap)
View(Heatmap)
View(Heatmap)
Heatmap
