healthy_median$arm <- factor(healthy_median$arm, levels=armlevels)
arm <- df.fr %>% group_by(arm) %>%
dplyr::summarize(n=n()) %>%
mutate(arm = as.character(arm))
small.arms <- setNames(c("", "10q", "", "12q", "", "16q",
"", "17q", "", "18q",
"", "", "", "",
"", ""),
c("10p", "10q", "12p", "12q", "16p", "16q",
"17p", "17q", "18p", "18q",
"19p", "19q", "20p", "20q",
"21q", "22q"))
arm.labels <- setNames(arm$arm, arm$arm)
arm.labels[names(small.arms)] <- small.arms
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, opt_TF > 0.03), size=0.75, alpha=1)
g1 <- g1 + geom_line(data=healthy_median, size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
View(healthy_median)
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, opt_TF > 0.03), size=0.75, alpha=1)
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
View(summary_df)
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
#geom_line(size=0.75, alpha=0.5)
geom_line(data=subset(df.fr, sample_id="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
#geom_line(size=0.75, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
c1 <- ggplot(df.fr, aes(x=bin, y=coverage_centered_01, group=sample_id, color="red")) +
#geom_line(size=0.5, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
c1 <- c1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
c1 <- c1 + labs(x="", y="Coverage profile\n", color="")
c1 <- c1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
c1 <- c1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
c1 <- c1 + mytheme
c1
b1 <- ggplot(df.fr, aes(x=bin, y=coverage_centered_01, group=sample_id, color="red")) +
#geom_line(size=0.5, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
b1 <- b1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
b1 <- b1 + labs(x="", y="Coverage profile\n", color="")
b1 <- b1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
b1 <- b1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
b1 <- b1 + mytheme
b1
c1 <- ggplot(df.fr, aes(x=bin, y=coverage_centered, group=sample_id, color="red")) +
#geom_line(size=0.5, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
c1 <- c1 + geom_line(data=healthy_median, aes(x=bin, y=median_coverage_centered), size=0.75, alpha=0.5, color="black")
c1 <- c1 + labs(x="", y="Coverage profile\n", color="")
c1 <- c1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
c1 <- c1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
c1 <- c1 + mytheme
c1
b1 <- ggplot(df.fr, aes(x=bin, y=combined_centered, group=sample_id, color="red")) +
#geom_line(size=0.5, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
b1 <- b1 + geom_line(data=healthy_median, aes(x=bin, y=median_combined_centered), size=0.75, alpha=0.5, color="black")
b1 <- b1 + labs(x="", y="Coverage profile\n", color="")
b1 <- b1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
b1 <- b1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
b1 <- b1 + mytheme
b1
c1
g1
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
#geom_line(size=0.75, alpha=0.5)
geom_line(data=subset(df.fr, sample_id==c("TGL49_0170_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated",
"TGL49_0170_Cf_S_PE_386_WG.filter.deduped.realigned.recalibrated",
"TGL49_0172_Cf_S_PE_389_WG.filter.deduped.realigned.recalibrated",
"TGL49_0177_Cf_S_PE_404_WG.filter.deduped.realigned.recalibrated",
"TGL49_0181_Cf_S_PE_375_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1))
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
#geom_line(size=0.75, alpha=0.5)
geom_line(data=subset(df.fr, sample_id=c("TGL49_0170_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated",
"TGL49_0170_Cf_S_PE_386_WG.filter.deduped.realigned.recalibrated",
"TGL49_0172_Cf_S_PE_389_WG.filter.deduped.realigned.recalibrated",
"TGL49_0177_Cf_S_PE_404_WG.filter.deduped.realigned.recalibrated",
"TGL49_0181_Cf_S_PE_375_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1))
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
keep <- c("TGL49_0170_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated",
"TGL49_0170_Cf_S_PE_386_WG.filter.deduped.realigned.recalibrated",
"TGL49_0172_Cf_S_PE_389_WG.filter.deduped.realigned.recalibrated",
"TGL49_0177_Cf_S_PE_404_WG.filter.deduped.realigned.recalibrated",
"TGL49_0181_Cf_S_PE_375_WG.filter.deduped.realigned.recalibrated")
df.fr_org <- df.fr[df.fr$sample_id %in% keep, ]
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id==c(), size=0.75, alpha=1))
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
# Generate Fragmentation and Coverage plots
g1 <- ggplot(df.fr_org, aes(x=bin, y=ratio_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id==c(), size=0.75, alpha=1))
g1 <- g1 + geom_line(data=healthy_median, aes(x=bin, y=median_ratio_centered), size=0.75, alpha=0.5, color="black")
g1 <- g1 + labs(x="", y="Fragmentation profile\n", color="")
g1 <- g1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
g1 <- g1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
g1 <- g1 + mytheme
g1
c1 <- ggplot(df.fr_org, aes(x=bin, y=coverage_centered, group=sample_id, color="red")) +
geom_line(size=0.5, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
c1 <- c1 + geom_line(data=healthy_median, aes(x=bin, y=median_coverage_centered), size=0.75, alpha=0.5, color="black")
c1 <- c1 + labs(x="", y="Coverage profile\n", color="")
c1 <- c1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
c1 <- c1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
c1 <- c1 + mytheme
c1
b1 <- ggplot(df.fr_org, aes(x=bin, y=combined_centered, group=sample_id, color="red")) +
geom_line(size=0.5, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
b1 <- b1 + geom_line(data=healthy_median, aes(x=bin, y=median_combined_centered), size=0.75, alpha=0.5, color="black")
b1 <- b1 + labs(x="", y="Coverage profile\n", color="")
b1 <- b1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
b1 <- b1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
b1 <- b1 + mytheme
b1
b1 <- ggplot(df.fr_org, aes(x=bin, y=combined_centered, group=sample_id, color="red")) +
geom_line(size=0.5, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
b1 <- b1 + geom_line(data=healthy_median, aes(x=bin, y=median_combined_centered), size=0.75, alpha=0.5, color="black")
b1 <- b1 + labs(x="", y="Combined profile\n", color="")
b1 <- b1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
b1 <- b1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
b1 <- b1 + mytheme
b1
g1
c1
b1
c1 <- ggplot(df.fr_org, aes(x=bin, y=coverage_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
c1 <- c1 + geom_line(data=healthy_median, aes(x=bin, y=median_coverage_centered), size=0.75, alpha=0.5, color="black")
c1 <- c1 + labs(x="", y="Coverage profile\n", color="")
c1 <- c1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
c1 <- c1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
c1 <- c1 + mytheme
c1
b1 <- ggplot(df.fr_org, aes(x=bin, y=combined_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
b1 <- ggplot(df.fr_org, aes(x=bin, y=combined_centered, group=sample_id, color="red")) +
geom_line(size=0.75, alpha=0.5)
#geom_line(data=subset(df.fr, sample_id=="TGL49_0166_Cf_S_PE_420_WG.filter.deduped.realigned.recalibrated"), size=0.75, alpha=1)
b1 <- b1 + geom_line(data=healthy_median, aes(x=bin, y=median_combined_centered), size=0.75, alpha=0.5, color="black")
b1 <- b1 + labs(x="", y="Combined profile\n", color="")
b1 <- b1 + facet_grid(~arm, switch="x",space="free_x", scales="free_x", labeller=labeller(arm=arm.labels))
b1 <- b1 + coord_cartesian(xlim = NULL, ylim=c(-.10,.12), expand = TRUE)
b1 <- b1 + mytheme
b1
library(plotly)
library(RColorBrewer)
#set coverage (C), tumour fraction (TF), Targets (N), # of mutations to find (M)
C <- c(0.1, 0.5, 1, 2, 5, 10, 15, 20, 25, 30, 40, 50)
N <- c(2000)
M <- c(1)
#Set color palette
palette <- colorRampPalette(c("#DEEBF7", "#DEEBF7", "#DEEBF7", "#C6DBEF","#9ECAE1", "#2171B5"))
#Set function to calculate p and pm
pfun <- function(a,b,c,d) {(1-((1-a)^(b*c)))^d}
pmfun <- function(a,b,c) {(a*b*c*0.5)}
#Calculate p-value table
p <- outer(TF, C, N, M, FUN=pfun)
pm <- outer(TF, C, N, FUN=pmfun)
pm <- t(pm)
TF <- c(0.1, 0.01, 0.001, 0.0001, 0.00001)
#Set function to calculate p and pm
pfun <- function(a,b,c,d) {(1-((1-a)^(b*c)))^d}
pmfun <- function(a,b,c) {(a*b*c*0.5)}
#Calculate p-value table
p <- outer(TF, C, N, M, FUN=pfun)
pm <- outer(TF, C, N, FUN=pmfun)
pm <- t(pm)
#Create plot list
filteredList <- list(x = C,
y = TF,
z = p,
m = pm)
#Create plot
plot_ly(type = 'surface', contours = list(
x = list(show = TRUE, start = 10000, end = 0, size = 10, color = "black"),
y = list(show = TRUE, start = 0.1, end = 0, size = 0.0001, color = "black"),
z = list(show = TRUE, start = 0.95, end = 1, size = 0.05, color = "black")),
colors = palette(50),
x = filteredList$x,
y = filteredList$y,
z = filteredList$z,
text = filteredList$m,
hovertemplate = paste('<br><b>Tumour Fraction</b>: %{y}',
'<br><b>Coverage</b>: %{x}X',
'<br><b>probability</b>: %{z}',
'<br><b># mutant reads</b>: %{text}',
"<extra></extra>")) %>%
layout(title = "",
scene = list(
camera = list(eye = list(x = 1.25, y = 1.25, z = 0.75)),
xaxis = list(title = "Coverage",
autorange = "reversed",
type = "log",
nticks = 10,
tickvals = c(0.1, 1, 5, 20, 50, 200, 1000, 5000)),
yaxis = list(title = "Tumour Fraction",
autorange = "reversed",
type = "log",
nticks = 5,
tickvals = TF,
ticktext = c("10<sup>-2</sup>", "10<sup>-3</sup>", "10<sup>-4</sup>", "10<sup>-5</sup>", "10<sup>-6</sup>"),
showexponent = "all",
exponentformat = "E"),
zaxis = list(title = "Probability",
nticks = 5,
tickvals = c(0.25, 0.50, 0.75, 1.00)),
camera = list(eye = list(x = 0, y = -1, z = 1)),
aspectratio = list(x = 1, y = 1, z = 0.5)))
library(ComplexHeatmap)
library(dplyr)
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Supplemental Figure 1")
data_onco <- read.table("Supplemental Figure 1A.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## Set ichorCNA
data_onco$ichorCNA <- data_onco$ichorCNA*100
data_ichor <- data_onco$ichorCNA
## Set alteration percentages
data_pct <- data_onco[, !(colnames(data_onco) %in% c("sample_ID", "detection","ichorCNA"))]
data_pct <- data_pct[c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q")]
genes <- colnames(data_pct)
data_pct[data_pct == ""] <- NA
data_pct[data_pct == "LOH"] <- 1
data_pct[data_pct == "gain"] <- 1
data_pct <- mutate_all(data_pct, function(x) as.numeric(as.character(x)))
data_pct <- trunc((colSums(data_pct, na.rm=TRUE)/11)*100)
data_pct <- paste0(data_pct, '%')
data_pct <- as.matrix(data_pct)
rownames(data_pct) <- genes
## Set labels
data_onco$detection <- factor(data_onco$detection,
levels = c("IMPACT", "ichorCNA"),
labels = c("MLPA", "sWGS"))
data_labels <- as.matrix(data_onco$detection)
row.names(data_labels) <- data_onco$sample_ID
## Set samples
data_samples <- data_onco[, c("patient_ID", "sample_ID")]
## Format heatmap
row.names(data_onco) <- data_onco$sample_ID
data_onco <- as.data.frame(t(data_onco))
data_onco <- data_onco[c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q"), ]
data_onco <- as.matrix(data_onco)
## Set colours
col <- c(LOH = "#1f78b4", LOH_ichor = "#a6cee3",
gain = "#e31a1c", gain_ichor = "#fb9a99")
## Set variables
alter_fun = list(
background = function(x, y, w, h)
grid.rect(x, y, w*0.8, h*0.8, gp = gpar(fill = "lightgrey", col = NA)),
LOH = function(x, y, w, h)
grid.rect(x, y, w*0.8, h*0.8, gp = gpar(fill = col["LOH"], col = NA)),
gain = function(x, y, w, h)
grid.rect(x, y, w*0.8, h*0.8, gp = gpar(fill = col["gain"], col = NA)),
LOH_ichor = function(x, y, w, h)
grid.rect(x, y, w*0.8, h*0.8, gp = gpar(fill = col["LOH_plasma"], col = NA)),
gain_ichor = function(x, y, w, h)
grid.rect(x, y, w*0.8, h*0.8, gp = gpar(fill = col["gain_plasma"], col = NA)))
## Set additional annotations
top_annotation <- HeatmapAnnotation("sWGS Tumour Fraction (%)" = anno_points(data_ichor, size = unit(3, "mm"), ylim = c(0, 15)),
annotation_name_side = "left",
height = unit(3, "cm"),
annotation_name_rot = 0)
label_annotation <- HeatmapAnnotation(Timepoint = anno_text(data_labels))
pct_annotation = rowAnnotation(new_pct = anno_text(data_pct))
## Set labels
heatmap_legend_param = list(title = "Alternations",
at = c("LOH", "gain", "LOH_ichor", "gain_ichor"),
labels = c("LOH MLPA", "Gain MLPA", "LOH sWGS", "Gain sWGS"))
row_labels = structure(c("Chr 3", "Chr 6p", "Chr 6q", "Chr 8p", "Chr 8q"),
names = c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q"))
## Set order
sample_order <- data_samples$sample_ID
gene_order <- c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q")
column_split <- data_samples$patient_ID
## Generate oncopring
oncoPrint <- oncoPrint(data_onco,
alter_fun = alter_fun,
col = col,
row_names_side = "left", pct_side = "none",
top_annotation = top_annotation,
bottom_annotation = label_annotation,
#left_annotation = freq_annotation,
right_annotation = pct_annotation,
heatmap_legend_param = heatmap_legend_param,
row_order = gene_order,
column_order = sample_order,
row_labels = row_labels,
column_split = column_split,
border = TRUE,
border_gp = gpar(col = "black")
)
draw(oncoPrint, heatmap_legend_side = "right")
freq_annotation <- rowAnnotation(IMPACT_barplot = anno_oncoprint_barplot(c("LOH", "gain"),
border = TRUE, height = unit(4, "cm"),
axis_param = list(side = "bottom", labels_rot = 0, direction = "reverse")),
ichor_barplot = anno_oncoprint_barplot(c("LOH_ichor", "gain_ichor"),
border = TRUE, height = unit(4, "cm"),
axis_param = list(side = "bottom", labels_rot = 0, direction = "reverse")))
## Generate oncopring
oncoPrint <- oncoPrint(data_onco,
alter_fun = alter_fun,
col = col,
row_names_side = "left", pct_side = "none",
top_annotation = top_annotation,
bottom_annotation = label_annotation,
left_annotation = freq_annotation,
right_annotation = pct_annotation,
heatmap_legend_param = heatmap_legend_param,
row_order = gene_order,
column_order = sample_order,
row_labels = row_labels,
column_split = column_split,
border = TRUE,
border_gp = gpar(col = "black")
)
draw(oncoPrint, heatmap_legend_side = "right")
freq_annotation <- rowAnnotation(IMPACT_barplot = anno_oncoprint_barplot(c("LOH", "gain"),
border = TRUE, height = unit(4, "cm"),
axis_param = list(side = "bottom", labels_rot = 0, direction = "reverse")))
## Generate oncopring
oncoPrint <- oncoPrint(data_onco,
alter_fun = alter_fun,
col = col,
row_names_side = "left", pct_side = "none",
top_annotation = top_annotation,
bottom_annotation = label_annotation,
left_annotation = freq_annotation,
right_annotation = pct_annotation,
heatmap_legend_param = heatmap_legend_param,
row_order = gene_order,
column_order = sample_order,
row_labels = row_labels,
column_split = column_split,
border = TRUE,
border_gp = gpar(col = "black")
)
draw(oncoPrint, heatmap_legend_side = "right")
freq_annotation <- rowAnnotation(IMPACT_barplot = anno_oncoprint_barplot(c("LOH", "LOH_ichor", "gain", "gain_ichor"),
border = TRUE, height = unit(4, "cm"),
axis_param = list(side = "bottom", labels_rot = 0, direction = "reverse")))
pct_annotation = rowAnnotation(new_pct = anno_text(data_pct))
## Set labels
heatmap_legend_param = list(title = "Alternations",
at = c("LOH", "gain", "LOH_ichor", "gain_ichor"),
labels = c("LOH MLPA", "Gain MLPA", "LOH sWGS", "Gain sWGS"))
row_labels = structure(c("Chr 3", "Chr 6p", "Chr 6q", "Chr 8p", "Chr 8q"),
names = c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q"))
## Set order
sample_order <- data_samples$sample_ID
gene_order <- c("Chr3", "Chr6p", "Chr6q", "Chr8p", "Chr8q")
column_split <- data_samples$patient_ID
## Generate oncopring
oncoPrint <- oncoPrint(data_onco,
alter_fun = alter_fun,
col = col,
row_names_side = "left", pct_side = "none",
top_annotation = top_annotation,
bottom_annotation = label_annotation,
left_annotation = freq_annotation,
right_annotation = pct_annotation,
heatmap_legend_param = heatmap_legend_param,
row_order = gene_order,
column_order = sample_order,
row_labels = row_labels,
column_split = column_split,
border = TRUE,
border_gp = gpar(col = "black")
)
draw(oncoPrint, heatmap_legend_side = "right")
setwd("/Users/derekwong/Google Drive/Post-Doc/Uveal Melanoma/Manuscript/Figures/Supplemental Figure 1")
library(ggplot2)
library(reshape2)
library(plyr)
library(ggforce)
## Supplemental Figure 1B - IchorCNA plots
data_1B <- read.delim("Supplemental Figure 1B.txt")
### Format dataframe
data_1B$timepoint <- as.character(data_1B$timepoint)
data_1B$timepoint <- factor(data_1B$timepoint,
levels = c("0", "0.5", "3", "6", "12"),
labels = c("Baseline", "2 weeks", "3 months", "6 months", "12 months"))
data_1B <- data_1B[, c("sample_ID", "timepoint", "ichor_default", "ichor_short")]
View(data_1B)
data_1B$sample_ID
unique(data_1B$sample_ID)
data_1B$timepoint <- factor(data_1B$timepoint,
levels = c("UMB-001", "UMB-002", "UMB-003", "UMB-004", "UMB-005", "UMB-006",
"UMB-007", "UMB-008", "UMB-009", "UMB-010", "UMB-011"),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"))
View(data_1B)
## Supplemental Figure 1B - IchorCNA plots
data_1B <- read.delim("Supplemental Figure 1B.txt")
### Format dataframe
data_1B$timepoint <- as.character(data_1B$timepoint)
data_1B$sample_ID <- factor(data_1B$sample_ID,
levels = c("UMB-001", "UMB-002", "UMB-003", "UMB-004", "UMB-005", "UMB-006",
"UMB-007", "UMB-008", "UMB-009", "UMB-010", "UMB-011"),
labels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"))
data_1B$timepoint <- factor(data_1B$timepoint,
levels = c("0", "0.5", "3", "6", "12"),
labels = c("Baseline", "2 weeks", "3 months", "6 months", "12 months"))
data_1B <- data_1B[, c("sample_ID", "timepoint", "ichor_default", "ichor_short")]
data_1B <- melt(data_1B)
View(data_1B)
data_1B$variable <- factor(data_1B$variable,
levels = c("ichor_default", "ichor_short"),
labels = c("all", "90-150bp"))
data_1B$detection <- ifelse(data_1B$value > 0.03, "yes", "no")
### Plot Supplemental Figure 1B
tumour_fraction <- ggplot(data_1B, aes(x = timepoint,
y = value,
group = sample_ID,
fill = detection)) +
geom_point(aes(), alpha = 0.8, size = 2, shape = 21) +
xlab("Timepoint") +
ylab("ichorCNA Tumour Fraction") +
scale_fill_manual(values = c("grey", "#CC2D35")) +
facet_grid(variable ~ sample_ID,
scales = "free",
space = "free") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=0.5),
panel.background = element_blank(),
legend.position = "none",
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
strip.background = element_rect(color="white", fill="white"),
strip.text.x = element_text(size = 12, color = "black", face = "bold", angle = 90),
strip.text.y = element_text(size = 12, color = "black", face = "bold", angle = 270)) +
scale_y_continuous(limits=c(-0.01, 0.15), expand = c(0,0)) +
geom_hline(data = data_1B, aes(yintercept = 0.03), linetype = "dashed", color = "grey")
tumour_fraction
### Plot Supplemental Figure 1B
tumour_fraction <- ggplot(data_1B, aes(x = timepoint,
y = value,
group = sample_ID,
fill = detection)) +
geom_point(aes(), alpha = 0.8, size = 2, shape = 21) +
xlab("Timepoint") +
ylab("ichorCNA Tumour Fraction") +
scale_fill_manual(values = c("grey", "#CC2D35")) +
facet_grid(variable ~ sample_ID,
scales = "free",
space = "free") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=0.5),
panel.background = element_blank(),
legend.position = "none",
axis.text = element_text(size = 15),
axis.title = element_text(size = 15),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
strip.background = element_rect(color="white", fill="white"),
strip.text.x = element_text(size = 12, color = "black", face = "bold", angle = 0),
strip.text.y = element_text(size = 12, color = "black", face = "bold", angle = 270)) +
scale_y_continuous(limits=c(-0.01, 0.15), expand = c(0,0)) +
geom_hline(data = data_1B, aes(yintercept = 0.03), linetype = "dashed", color = "grey")
tumour_fraction
ggsave("Supplemental Figure 1B.pdf", tumour_fraction, device = "pdf", width = 6, height = 5, units = "in")
ggsave("Supplemental Figure 1B.pdf", tumour_fraction, device = "pdf", width = 8, height = 5, units = "in")
